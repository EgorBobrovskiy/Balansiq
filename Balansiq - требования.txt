Требования к проекту

1 Введение
Разрабатываемое приложение получит кодовое название Balansiq. Оно предназначено для хранения, структурирования и анализа домашних финансов. 
Приложение должно выполнять функции добавления, редактирования, удаления данных и их представления в виде графиков, чтобы было удобнее анализировать и планировать свои расходы. Balansiq не будет поддерживать многопользовательский режим и функцию автоматического планирования расходов и доходов. 
Приложение ориентировано на людей, умеющих работать с компьютером как минимум на уровне пользователя и желающих легко контролировать свои финансы.

2 Требования пользователя
2.1 Программные интерфейсы
Для приложения требуется наличие установленного .NET Framework 4.6 для возможности выполнения и взаимодействия модулей программы в среде CLR.
SQLite3 будет использоваться в качестве легковесной базы данных для хранения пользовательских записей. 
Ограничений по используемой памяти нет.

2.2 Интерфейс пользователя
Приложение взаимодействует с пользователем с помощью графического интерфейса (см. папку Mockups).

2.3 Характеристики пользователей
Приложение предназначено для пользователей, которым важно следить за своим финансовым положением (школьники старших классов, студенты, работоспособное население, пенсионеры).
Уровень специального финансового образования не важен. Для использования приложения требуется только базовое умение пользования компьютером.

2.4 Предположения и зависимости
На требования, описанные в данном документе, повлиять может мнение пользователей, задействованных в тестировании продукта.

3 Системные требования
3.1 Функциональные требования
3.1.1 Приложение должно убедиться в доступности файла базы данных пользователя. Если файл не найден, создаётся новый.
3.1.2 Приложение должно гарантировать существование всех необходимых таблиц в базу. Если таблица(-цы) отсутствует(-ют), создать новую(-ые).
3.1.3 Приложение должно обеспечивать полнофункциональное управление только с помощью клавиатуры при отсутствии других устройств ввода.
3.1.4 Приложение при возникновении ошибки должно уведомить об этом пользователя в удобном для восприятия виде (т.е. никаких "error 1F4A").

3.2 Нефункциональные требования
3.2.1 Безопасность
Приложение не должно использовать какие-либо методы шифрования информации, т.к. данные доступны всем пользователям, имеющим права на запуск этого приложения.
3.2.2 Доступность
Приложение должно позволить пользователю восстановить данные, если основной файл базы данных отсутствует. Во время работы приложение должно выполнять сохранение всех внесённых изменений.
3.2.3 Переносимость
Все необходимые для работы приложения сторонние библиотеки должны поставляться вместе с ним. Приложение должно выполняться в системах, поддерживающих .NET Framework 4.6 и выше.
